import { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { AxiosResponse } from "axios";
import { fetchArticles, fetchCategories } from "@/utils/api";
import QueryString from "qs";

// types / interfaces
import { ICollectionResponse } from "@/Interface/CollectionResponse.interface";
import { ICategory } from "@/Interface/Category.interface";
import { IArticle } from "@/Interface/Article.interface";

// components
import Tab from "@/components/Tab";
import ArticleList from "@/components/ArticleList";

// PropType Interface
export interface IPropType {
  categories: {
    items: ICategory[];
  };
  articles: {
    items: IArticle[];
  };
}

const Home: NextPage<IPropType> = ({ categories, articles }: IPropType) => {
  return (
    <div>
      <Head>
        <title>terminalState | Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/code.ico" />
      </Head>

      {/* CATEGORIES-TABS */}
      <Tab categories={categories} />

      <h1 className="text-3xl font-normal">
        Welcome to the space of Million Coders
      </h1>

      {/* ARTICLES */}
      <ArticleList articles={articles} />
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async () => {
  const options = {
    populate: ["author.avatar"],
    sort: ["id:desc"],
  };
  const queryString = QueryString.stringify(options);
  console.log("queryString ", queryString);

  // CATEGORIES
  const { data: cateogories }: AxiosResponse<ICollectionResponse<ICategory[]>> =
    await fetchCategories();

  // ARTICLES
  const { data: articles }: AxiosResponse<ICollectionResponse<IArticle[]>> =
    await fetchArticles(queryString);

  return {
    props: {
      categories: {
        items: cateogories.data,
      },
      articles: {
        items: articles.data,
        pagination: articles.meta.pagination,
      },
    },
  };
};

export default Home;
