import { IArticle } from "@/types/interface/Article.interface";
import { ICollectionResponse } from "@/types/interface/CollectionResponse.interface";
import { fetchArticleBySlug } from "@/utils/api";
import { formatDate } from "@/utils/formatDate";
import { AxiosResponse } from "axios";
import { GetServerSideProps } from "next";
import Head from "next/head";
import Image from "next/image";
import QueryString from "qs";
import React from "react";

interface IPropType {
  article: IArticle;
  notFound?: boolean;
}

const slug = ({ article, notFound = false }: IPropType) => {
  const AUTHOR_IMAGE =
    article.attributes.author.data.attributes.avatar.data.attributes.formats
      .thumbnail.url;

  const AUTHOR_FIRST_NAME = article.attributes.author.data.attributes.firstname;
  const AUTHOR_LAST_NAME = article.attributes.author.data.attributes.lastname;
  const ARTICLE_IMAGE = article.attributes.image.data.attributes.url;

  return (
    <div>
      <Head>
        <title>{article.attributes.title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/code.ico" />
      </Head>
      <div className="my-12 grid lg:grid-cols-3 gap-12">
        <div className="col-span-2">
          <h1 className="text-3xl font-bold">{article.attributes.title}</h1>
          <div className="flex items-center my-4">
            <div className="mr-4 rounded-lg overflow-hidden flex items-center justify-center">
              <Image
                src={`http://127.0.0.1:1337${AUTHOR_IMAGE}`}
                alt=""
                height={20}
                width={20}
              />
            </div>
            <span className="text-sm font-bold text-gray-600 mr-4">
              {AUTHOR_FIRST_NAME} {AUTHOR_LAST_NAME}
            </span>
            <span className="text-gray-400">
              {formatDate(article.attributes.createdAt)}
            </span>
          </div>
          <div className="text-lg text-gray-600 leading-8 text-justify">
            {article.attributes.body}
          </div>
        </div>
        {/* <Image
          className="w-full my-12 mb-16"
          src={`http://127.0.0.1:1337${ARTICLE_IMAGE}`}
          alt={article.attributes.title}
        /> */}
      </div>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const queryString = QueryString.stringify({
    populate: ["Image", "author.avatar"],
    filters: {
      slug: {
        $eq: query.slug,
      },
    },
  });

  const { data: articles }: AxiosResponse<ICollectionResponse<IArticle[]>> =
    await fetchArticleBySlug(queryString);

  if (articles.data.length === 0) return { notFound: true };

  return { props: { article: articles.data[0] } };
};

export default slug;
